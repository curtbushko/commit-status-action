name: build
on: [push, pull_request]

jobs:
  get-go-version:
    name: "Determine Go toolchain version"
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Determine Go version
        id: get-go-version
        # We use .go-version as our source of truth for current Go
        # version, because "goenv" can react to it automatically.
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> "${GITHUB_OUTPUT}"

  get-shas:
    runs-on: ubuntu-latest
    outputs:
      short-sha: ${{ steps.get-shas.outputs.short-sha }}
      long-sha: ${{ steps.get-shas.outputs.long-sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Determine SHA 
        id: get-shas
        run: |
          echo "Getting SHAs"
          echo "short-sha=$(git rev-parse --short HEAD)" >> "${GITHUB_OUTPUT}"
          echo "long-sha=$(git rev-parse HEAD)" >> "${GITHUB_OUTPUT}"

  lint:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53

  build:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: make build

  docker:
    needs:
      - get-shas
      - get-go-version
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/curtbushko/commit-status-action:${{ needs.get-shas.outputs.short-sha }}
          build-args: GOVERSION=${{ needs.get-go-version.outputs.go-version }}

  # test:
  #   needs:
  #     - get-shas
  #     - build
  #     - docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: commit status action
  #       uses: docker://ghcr.io/curtbushko/commit-status-action@${{ needs.get-shas.outputs.short-sha }}
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         state: ${{ job.status }}
  #         context: "Integration test" 
  #         description: "Integration test"
  #         owner: ${{ github.repository_owner }}
  #         repository: ${{ github.repository }}
  #         sha: ${{ needs.get-shas.outputs.long-sha }}
  #         details_url: "http://foo"
